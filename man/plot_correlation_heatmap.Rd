% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S04_Plotting.R
\name{plot_correlation_heatmap}
\alias{plot_correlation_heatmap}
\title{Plot a Heatmap for a Correlation Matrix}
\usage{
plot_correlation_heatmap(
  x,
  ttl = "Correlation matrix",
  labels = NULL,
  lyt = NULL,
  gradient = c("#E69F00", "#56B4E9"),
  txtSz = 1.25,
  mc_adjust = "BH",
  cut_off = 0.05,
  new = T,
  H = 20/3,
  W = 25/3,
  abbr_labels = TRUE,
  status = FALSE
)
}
\arguments{
\item{x}{A data frame (all variables will be used
when generating the correlation matrix).}

\item{ttl}{An optional title for the figure.}

\item{labels}{The labels for the rows/columns. Users
can pass a list with two character vectors of matching
length to provide separate labels for rows and columns.}

\item{lyt}{An optional matrix specifying the layout
of the main panel (1) versus the side panel
(2) with the color gradient.}

\item{gradient}{The final end colors for the negative
and positive correlations, respectively.}

\item{txtSz}{The size of the text in the figure (a second
value can be provided to adjust variable labels separately).}

\item{mc_adjust}{The method to use when correcting for
multiple comparisons (see \code{\link[stats]{p.adjust}}).}

\item{cut_off}{Cut-off for statistical significance.}

\item{new}{Logical; if \code{TRUE} generates a new
plotting window via \code{\link[grDevices]{x11}}.}

\item{H}{The height in inches of the figure if a new
plotting window is generated.}

\item{W}{The width in inches of the figure if a new
plotting window is generated.}

\item{abbr_labels}{Logical; if \code{TRUE} abbreviates
labels to 4 characters. A second value can be provided
to abbreviate labels on the top separately.}

\item{status}{Logical; if \code{TRUE} displays the
progress of the function for debugging purposes.}
}
\value{
A heatmap for the upper-triangle portion of
the correlation matrix.
}
\description{
Generates a heatmap of the upper triangle of
a correlation matrix.
}
\examples{
# Load data
data("mtcars")
x <- mtcars[, c(1,3,4,5,6,7)]
plot_correlation_heatmap( x, new = FALSE )

# Simulate a correlation matrix

# 5 x 5 matrix of random values
rand_mat <- matrix( rnorm(25), 5, 5 )
# Create covariance matrix by
# multiplying matrix by its transpose
cov_mat <- rand_mat \%*\% t( rand_mat )
corr_mat <- cov_mat/sqrt(diag(cov_mat)\%*\%t(diag(cov_mat)))

# Simulate data
x <- MASS::mvrnorm( 100, rep( 0, nrow( corr_mat ) ), corr_mat )
colnames( x ) <- paste0( 'V', 1:ncol( x ) )
x <- data.frame(x)
plot_correlation_heatmap( x, new = FALSE )

}
