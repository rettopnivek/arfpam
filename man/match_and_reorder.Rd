% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S03_Utilities.R
\name{match_and_reorder}
\alias{match_and_reorder}
\title{Match and Reorder Vectors}
\usage{
match_and_reorder(x, values, y = NULL)
}
\arguments{
\item{x}{A vector.}

\item{values}{A vector containing the values to match
against in \code{x}.}

\item{y}{An optional vector matching in length to \code{x}
to reorder - otherwise the function returns the indices
for reordering.}
}
\value{
Either a vector of indices for reordering or the
reordered output from the input \code{y}.
}
\description{
Function to match a vector of values against
another vector and reorder the original
vector based on the matching indices.
}
\examples{
x <- rep( LETTERS[1:3], 3 )
values <- c( 'C', 'B', 'A' )
y <- rep( 1:3, 3 )
match_and_reorder( x, values, y )

set.seed( 111 ) # For reproducibility
# Example data frame
dtf_example <- data.frame(
  X = rep( 1:4, each = 2 ),
  Y = round( rnorm( 8 ), 2 )
)
# Resample with replacement from 'X'
shuffled_x <- sample( 1:4, size = 4, replace = TRUE )
# Create a reordered data frame based on the resampled values
dtf_shuffled <- data.frame(
  X = match_and_reorder( dtf_example$X, shuffled_x, dtf_example$X ),
  Y = match_and_reorder( dtf_example$X, shuffled_x, dtf_example$Y )
)

}
